   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "radar_adc_xmc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.radar_set_adc_configuration,"ax",%progbits
  20              	 .align 2
  21              	 .global radar_set_adc_configuration
  22              	 .thumb
  23              	 .thumb_func
  25              	radar_set_adc_configuration:
  26              	.LFB470:
  27              	 .file 1 "../Radar_Control/src/radar_adc_xmc.c"
   1:../Radar_Control/src/radar_adc_xmc.c **** /**
   2:../Radar_Control/src/radar_adc_xmc.c ****     @file: radar_adc_xmc.c
   3:../Radar_Control/src/radar_adc_xmc.c **** 
   4:../Radar_Control/src/radar_adc_xmc.c ****     @brief: This file contains the basic driver API to configure the ADC that's
   5:../Radar_Control/src/radar_adc_xmc.c ****             built in XMC microcontrollers used in Infineon radar sensors.
   6:../Radar_Control/src/radar_adc_xmc.c **** */
   7:../Radar_Control/src/radar_adc_xmc.c **** 
   8:../Radar_Control/src/radar_adc_xmc.c **** /* ===========================================================================
   9:../Radar_Control/src/radar_adc_xmc.c **** ** Copyright (C) 2018-2019 Infineon Technologies AG
  10:../Radar_Control/src/radar_adc_xmc.c **** ** All rights reserved.
  11:../Radar_Control/src/radar_adc_xmc.c **** ** ===========================================================================
  12:../Radar_Control/src/radar_adc_xmc.c **** **
  13:../Radar_Control/src/radar_adc_xmc.c **** ** ===========================================================================
  14:../Radar_Control/src/radar_adc_xmc.c **** ** This document contains proprietary information of Infineon Technologies AG.
  15:../Radar_Control/src/radar_adc_xmc.c **** ** Passing on and copying of this document, and communication of its contents
  16:../Radar_Control/src/radar_adc_xmc.c **** ** is not permitted without Infineon's prior written authorization.
  17:../Radar_Control/src/radar_adc_xmc.c **** ** ===========================================================================
  18:../Radar_Control/src/radar_adc_xmc.c **** */
  19:../Radar_Control/src/radar_adc_xmc.c **** 
  20:../Radar_Control/src/radar_adc_xmc.c **** /*
  21:../Radar_Control/src/radar_adc_xmc.c **** ==============================================================================
  22:../Radar_Control/src/radar_adc_xmc.c ****    1. INCLUDE FILES
  23:../Radar_Control/src/radar_adc_xmc.c **** ==============================================================================
  24:../Radar_Control/src/radar_adc_xmc.c ****  */
  25:../Radar_Control/src/radar_adc_xmc.c **** 
  26:../Radar_Control/src/radar_adc_xmc.c **** #include "ds_radar_interface.h"
  27:../Radar_Control/src/radar_adc_xmc.c **** #include "radar_api.h"
  28:../Radar_Control/src/radar_adc_xmc.c **** #include "radar_control.h"
  29:../Radar_Control/src/radar_adc_xmc.c **** #include "position2go_bsp.h"
  30:../Radar_Control/src/radar_adc_xmc.c **** 
  31:../Radar_Control/src/radar_adc_xmc.c **** /*
  32:../Radar_Control/src/radar_adc_xmc.c **** ==============================================================================
  33:../Radar_Control/src/radar_adc_xmc.c ****    2. EXPORTED FUNCTIONS
  34:../Radar_Control/src/radar_adc_xmc.c **** ==============================================================================
  35:../Radar_Control/src/radar_adc_xmc.c ****  */
  36:../Radar_Control/src/radar_adc_xmc.c **** 
  37:../Radar_Control/src/radar_adc_xmc.c **** uint16_t radar_set_adc_configuration(Radar_Handle_t device, const Adc_Configuration_t* configuratio
  38:../Radar_Control/src/radar_adc_xmc.c **** {
  28              	 .loc 1 38 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 70B5     	 push {r4,r5,r6,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 16
  36              	 .cfi_offset 4,-16
  37              	 .cfi_offset 5,-12
  38              	 .cfi_offset 6,-8
  39              	 .cfi_offset 14,-4
  40              	 .loc 1 38 0
  41 0002 0646     	 mov r6,r0
  42 0004 0D46     	 mov r5,r1
  39:../Radar_Control/src/radar_adc_xmc.c ****   XMC_UNUSED_ARG(device); /* Suppress compiler warnings of unused variable */
  40:../Radar_Control/src/radar_adc_xmc.c ****   
  41:../Radar_Control/src/radar_adc_xmc.c ****   uint32_t chirp_time_usec;
  42:../Radar_Control/src/radar_adc_xmc.c ****   
  43:../Radar_Control/src/radar_adc_xmc.c ****   /* Configuration change is only allowed while automatic trigger is not working */
  44:../Radar_Control/src/radar_adc_xmc.c ****   if (radar_get_data_acq_mode() != RADAR_MANUAL_TRIGGER)
  43              	 .loc 1 44 0
  44 0006 FFF7FEFF 	 bl radar_get_data_acq_mode
  45              	.LVL1:
  46 000a 0446     	 mov r4,r0
  47 000c 08B1     	 cbz r0,.L11
  45:../Radar_Control/src/radar_adc_xmc.c ****   {
  46:../Radar_Control/src/radar_adc_xmc.c ****     return (RADAR_ERR_BUSY);
  48              	 .loc 1 46 0
  49 000e 0220     	 movs r0,#2
  50 0010 70BD     	 pop {r4,r5,r6,pc}
  51              	.LVL2:
  52              	.L11:
  47:../Radar_Control/src/radar_adc_xmc.c ****   }
  48:../Radar_Control/src/radar_adc_xmc.c ****   
  49:../Radar_Control/src/radar_adc_xmc.c ****   /* Check if configuration is valid */
  50:../Radar_Control/src/radar_adc_xmc.c ****   /* ------------------------------- */
  51:../Radar_Control/src/radar_adc_xmc.c ****   if ((configuration->samplerate_Hz == 0) || (configuration->samplerate_Hz > BSP_MAX_ADC_FREQ_HZ))
  53              	 .loc 1 51 0
  54 0012 2B68     	 ldr r3,[r5]
  55 0014 1F4A     	 ldr r2,.L14
  56 0016 013B     	 subs r3,r3,#1
  57 0018 9342     	 cmp r3,r2
  58 001a 01D9     	 bls .L3
  59              	.L5:
  52:../Radar_Control/src/radar_adc_xmc.c ****   {
  53:../Radar_Control/src/radar_adc_xmc.c ****     return (RADAR_ERR_SAMPLERATE_OUT_OF_RANGE);
  60              	 .loc 1 53 0
  61 001c 5020     	 movs r0,#80
  62 001e 70BD     	 pop {r4,r5,r6,pc}
  63              	.LVL3:
  64              	.L3:
  54:../Radar_Control/src/radar_adc_xmc.c ****   }
  55:../Radar_Control/src/radar_adc_xmc.c ****   
  56:../Radar_Control/src/radar_adc_xmc.c ****   if (configuration->resolution != BSP_ADC_RESOLUTION)
  65              	 .loc 1 56 0
  66 0020 2B79     	 ldrb r3,[r5,#4]
  67 0022 0C2B     	 cmp r3,#12
  68 0024 01D0     	 beq .L12
  57:../Radar_Control/src/radar_adc_xmc.c ****   {
  58:../Radar_Control/src/radar_adc_xmc.c ****     return (RADAR_ERR_UNSUPPORTED_RESOLUTION);
  69              	 .loc 1 58 0
  70 0026 5120     	 movs r0,#81
  59:../Radar_Control/src/radar_adc_xmc.c ****   }
  60:../Radar_Control/src/radar_adc_xmc.c ****   
  61:../Radar_Control/src/radar_adc_xmc.c ****   /* Apply ADC configuration */
  62:../Radar_Control/src/radar_adc_xmc.c ****   /* ----------------------- */
  63:../Radar_Control/src/radar_adc_xmc.c ****   //sample_rate_divider = ((REFERENCE_OSC_FREQ_HZ << 1) / configuration->samplerate_Hz + 1) >> 1;
  64:../Radar_Control/src/radar_adc_xmc.c ****   
  65:../Radar_Control/src/radar_adc_xmc.c ****   if (ds_device_get_settings()->pll_modulation_mode == MODULATION_FMCW)
  66:../Radar_Control/src/radar_adc_xmc.c ****   {
  67:../Radar_Control/src/radar_adc_xmc.c ****     chirp_time_usec = (uint32_t) (((float)ds_device_get_settings()->num_samples_per_chirp * 1000.0f
  68:../Radar_Control/src/radar_adc_xmc.c ****     
  69:../Radar_Control/src/radar_adc_xmc.c ****     if (radar_set_chirp_time(device, chirp_time_usec) != RADAR_ERR_OK)
  70:../Radar_Control/src/radar_adc_xmc.c ****     {
  71:../Radar_Control/src/radar_adc_xmc.c ****       return (RADAR_ERR_SAMPLERATE_OUT_OF_RANGE);
  72:../Radar_Control/src/radar_adc_xmc.c ****     }
  73:../Radar_Control/src/radar_adc_xmc.c ****   }
  74:../Radar_Control/src/radar_adc_xmc.c ****   else
  75:../Radar_Control/src/radar_adc_xmc.c ****   {
  76:../Radar_Control/src/radar_adc_xmc.c ****     /* Apply ADC configuration */
  77:../Radar_Control/src/radar_adc_xmc.c ****     /* ----------------------- */
  78:../Radar_Control/src/radar_adc_xmc.c ****     if (radar_set_sampling_freq(device, MODULATION_DOPPLER, ds_device_get_settings()->adc_sampling_
  79:../Radar_Control/src/radar_adc_xmc.c ****     {
  80:../Radar_Control/src/radar_adc_xmc.c ****       return (RADAR_ERR_SAMPLERATE_OUT_OF_RANGE);
  81:../Radar_Control/src/radar_adc_xmc.c ****     }
  82:../Radar_Control/src/radar_adc_xmc.c ****   }
  83:../Radar_Control/src/radar_adc_xmc.c ****   
  84:../Radar_Control/src/radar_adc_xmc.c ****   /* Remember configuration (adjust frequency to rounded value) */
  85:../Radar_Control/src/radar_adc_xmc.c ****   /* ---------------------------------------------------------- */
  86:../Radar_Control/src/radar_adc_xmc.c ****   /* Copy the new adc configuration to the data store*/
  87:../Radar_Control/src/radar_adc_xmc.c ****   ds_ep_store_adc_config(configuration);
  88:../Radar_Control/src/radar_adc_xmc.c ****   
  89:../Radar_Control/src/radar_adc_xmc.c ****   return (RADAR_ERR_OK);
  90:../Radar_Control/src/radar_adc_xmc.c **** }
  71              	 .loc 1 90 0
  72 0028 70BD     	 pop {r4,r5,r6,pc}
  73              	.LVL4:
  74              	.L12:
  65:../Radar_Control/src/radar_adc_xmc.c ****   {
  75              	 .loc 1 65 0
  76 002a FFF7FEFF 	 bl ds_device_get_settings
  77              	.LVL5:
  78 002e 8369     	 ldr r3,[r0,#24]
  79 0030 012B     	 cmp r3,#1
  80 0032 13D0     	 beq .L13
  78:../Radar_Control/src/radar_adc_xmc.c ****     {
  81              	 .loc 1 78 0
  82 0034 FFF7FEFF 	 bl ds_device_get_settings
  83              	.LVL6:
  84 0038 C269     	 ldr r2,[r0,#28]
  85 003a 07EE902A 	 fmsr s15,r2
  86 003e F8EE677A 	 fuitos s15,s15
  87 0042 2146     	 mov r1,r4
  88 0044 17EE902A 	 fmrs r2,s15
  89 0048 3046     	 mov r0,r6
  90 004a FFF7FEFF 	 bl radar_set_sampling_freq
  91              	.LVL7:
  92 004e 0028     	 cmp r0,#0
  93 0050 E4D1     	 bne .L5
  94              	.L6:
  87:../Radar_Control/src/radar_adc_xmc.c ****   
  95              	 .loc 1 87 0
  96 0052 2846     	 mov r0,r5
  97 0054 FFF7FEFF 	 bl ds_ep_store_adc_config
  98              	.LVL8:
  89:../Radar_Control/src/radar_adc_xmc.c **** }
  99              	 .loc 1 89 0
 100 0058 0020     	 movs r0,#0
 101 005a 70BD     	 pop {r4,r5,r6,pc}
 102              	.LVL9:
 103              	.L13:
  67:../Radar_Control/src/radar_adc_xmc.c ****     
 104              	 .loc 1 67 0
 105 005c FFF7FEFF 	 bl ds_device_get_settings
 106              	.LVL10:
 107 0060 90ED0B7A 	 flds s14,[r0,#44]
 108 0064 DFED0C6A 	 flds s13,.L14+4
 109 0068 D5ED007A 	 flds s15,[r5]
 110 006c B8EE477A 	 fuitos s14,s14
 111              	.LVL11:
 112 0070 F8EE677A 	 fuitos s15,s15
 113 0074 27EE267A 	 fmuls s14,s14,s13
 114              	.LVL12:
  69:../Radar_Control/src/radar_adc_xmc.c ****     {
 115              	 .loc 1 69 0
 116 0078 3046     	 mov r0,r6
 117              	.LVL13:
  67:../Radar_Control/src/radar_adc_xmc.c ****     
 118              	 .loc 1 67 0
 119 007a C7EE277A 	 fdivs s15,s14,s15
 120 007e 67EEA67A 	 fmuls s15,s15,s13
  69:../Radar_Control/src/radar_adc_xmc.c ****     {
 121              	 .loc 1 69 0
 122 0082 FCEEE77A 	 ftouizs s15,s15
 123 0086 17EE901A 	 fmrs r1,s15
 124 008a FFF7FEFF 	 bl radar_set_chirp_time
 125              	.LVL14:
 126 008e 0028     	 cmp r0,#0
 127 0090 C4D1     	 bne .L5
 128 0092 DEE7     	 b .L6
 129              	.L15:
 130              	 .align 2
 131              	.L14:
 132 0094 5FE31600 	 .word 1499999
 133 0098 00007A44 	 .word 1148846080
 134              	 .cfi_endproc
 135              	.LFE470:
 137              	 .section .text.radar_get_adc_configuration,"ax",%progbits
 138              	 .align 2
 139              	 .global radar_get_adc_configuration
 140              	 .thumb
 141              	 .thumb_func
 143              	radar_get_adc_configuration:
 144              	.LFB471:
  91:../Radar_Control/src/radar_adc_xmc.c **** 
  92:../Radar_Control/src/radar_adc_xmc.c **** //============================================================================
  93:../Radar_Control/src/radar_adc_xmc.c **** 
  94:../Radar_Control/src/radar_adc_xmc.c **** uint16_t radar_get_adc_configuration(Radar_Handle_t device, Adc_Configuration_t* configuration)
  95:../Radar_Control/src/radar_adc_xmc.c **** {
 145              	 .loc 1 95 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	.LVL15:
  96:../Radar_Control/src/radar_adc_xmc.c ****   XMC_UNUSED_ARG(device);  /* Suppress compiler warnings of unused variable */
  97:../Radar_Control/src/radar_adc_xmc.c ****   
  98:../Radar_Control/src/radar_adc_xmc.c ****   if(configuration != NULL)
 150              	 .loc 1 98 0
 151 0000 29B1     	 cbz r1,.L18
  95:../Radar_Control/src/radar_adc_xmc.c ****   XMC_UNUSED_ARG(device);  /* Suppress compiler warnings of unused variable */
 152              	 .loc 1 95 0
 153 0002 08B5     	 push {r3,lr}
 154              	.LCFI1:
 155              	 .cfi_def_cfa_offset 8
 156              	 .cfi_offset 3,-8
 157              	 .cfi_offset 14,-4
 158 0004 0846     	 mov r0,r1
 159              	.LVL16:
  99:../Radar_Control/src/radar_adc_xmc.c ****   {
 100:../Radar_Control/src/radar_adc_xmc.c ****     ds_ep_fetch_adc_config(configuration);
 160              	 .loc 1 100 0
 161 0006 FFF7FEFF 	 bl ds_ep_fetch_adc_config
 162              	.LVL17:
 101:../Radar_Control/src/radar_adc_xmc.c ****     return (RADAR_ERR_OK);
 163              	 .loc 1 101 0
 164 000a 0020     	 movs r0,#0
 165 000c 08BD     	 pop {r3,pc}
 166              	.LVL18:
 167              	.L18:
 168              	.LCFI2:
 169              	 .cfi_def_cfa_offset 0
 170              	 .cfi_restore 3
 171              	 .cfi_restore 14
 102:../Radar_Control/src/radar_adc_xmc.c ****   }
 103:../Radar_Control/src/radar_adc_xmc.c ****   return (RADAR_ERR_FEATURE_UNAVAILABLE);
 172              	 .loc 1 103 0
 173 000e 4FF40040 	 mov r0,#32768
 174              	.LVL19:
 175 0012 7047     	 bx lr
 176              	 .cfi_endproc
 177              	.LFE471:
 179              	 .text
 180              	.Letext0:
 181              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 182              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 183              	 .file 4 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Store/inc/datastore.h"
 184              	 .file 5 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Radar_Control/inc/radar_control.h"
 185              	 .file 6 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 186              	 .file 7 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Libraries/XMCLib/inc/xmc_vadc.h"
 187              	 .file 8 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Libraries/XMCLib/inc/xmc_usbd_regs.h"
 188              	 .file 9 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Libraries/XMCLib/inc/xmc_usbd.h"
 189              	 .file 10 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Dave/Generated/USBD/usbd.h"
 190              	 .file 11 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Radar_Control/inc/radar_api.h"
 191              	 .file 12 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Libraries/CMSIS/Include/core_cm4.h"
 192              	 .file 13 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 193              	 .file 14 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 194              	 .file 15 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Dave/Generated/USBD/usbd_extern.h"
 195              	 .file 16 "E:/NOVA/Assets/IFX_P2G-HW-SW_V1.0.4/Firmware_Software/DAVE project/P2G_FW/Store/inc/ds_radar_interface.h"
DEFINED SYMBOLS
                            *ABS*:00000000 radar_adc_xmc.c
    {standard input}:20     .text.radar_set_adc_configuration:00000000 $t
    {standard input}:25     .text.radar_set_adc_configuration:00000000 radar_set_adc_configuration
    {standard input}:132    .text.radar_set_adc_configuration:00000094 $d
    {standard input}:138    .text.radar_get_adc_configuration:00000000 $t
    {standard input}:143    .text.radar_get_adc_configuration:00000000 radar_get_adc_configuration
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
radar_get_data_acq_mode
ds_device_get_settings
radar_set_sampling_freq
ds_ep_store_adc_config
radar_set_chirp_time
ds_ep_fetch_adc_config
